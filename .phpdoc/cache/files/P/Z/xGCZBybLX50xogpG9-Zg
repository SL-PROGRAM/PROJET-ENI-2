1626894627
waR3U4bTeM%3A201caa50ec4b5025773c4e847608eb3a-ff326d2adc51f4c263314dfabae00460
s:79468:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"ff326d2adc51f4c263314dfabae00460";s:39:" phpDocumentor\Reflection\Php\File name";s:68:"f3444fd83e0a94c5515459e55de113ebeaa50c335b58f4fdd969a272e4037d80.php";s:39:" phpDocumentor\Reflection\Php\File path";s:90:"var/cache/dev/twig/f3/f3444fd83e0a94c5515459e55de113ebeaa50c335b58f4fdd969a272e4037d80.php";s:41:" phpDocumentor\Reflection\Php\File source";s:38831:"<?php

use Twig\Environment;
use Twig\Error\LoaderError;
use Twig\Error\RuntimeError;
use Twig\Extension\SandboxExtension;
use Twig\Markup;
use Twig\Sandbox\SecurityError;
use Twig\Sandbox\SecurityNotAllowedTagError;
use Twig\Sandbox\SecurityNotAllowedFilterError;
use Twig\Sandbox\SecurityNotAllowedFunctionError;
use Twig\Source;
use Twig\Template;

/* sortie/index.html.twig */
class __TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e extends Template
{
    private $source;
    private $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'body' => [$this, 'block_body'],
            'javascripts' => [$this, 'block_javascripts'],
        ];
    }

    protected function doGetParent(array $context)
    {
        // line 1
        return "base.html.twig";
    }

    protected function doDisplay(array $context, array $blocks = [])
    {
        $macros = $this->macros;
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->enter($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "sortie/index.html.twig"));

        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02 = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->enter($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "sortie/index.html.twig"));

        $this->parent = $this->loadTemplate("base.html.twig", "sortie/index.html.twig", 1);
        $this->parent->display($context, array_merge($this->blocks, $blocks));
        
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->leave($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof);

        
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->leave($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof);

    }

    // line 2
    public function block_body($context, array $blocks = [])
    {
        $macros = $this->macros;
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->enter($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "body"));

        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02 = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->enter($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "body"));

        // line 3
        echo "    <style>
        .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
        .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
    </style>
    <div class=\"float-right\">
        <strong>Date du jour : ";
        // line 8
        echo twig_escape_filter($this->env, twig_date_format_filter($this->env, "now", "d/m/yy"), "html", null, true);
        echo "</strong><br/>
        <strong>Participant : ";
        // line 9
        echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, (isset($context["participant"]) || array_key_exists("participant", $context) ? $context["participant"] : (function () { throw new RuntimeError('Variable "participant" does not exist.', 9, $this->source); })()), "nom", [], "any", false, false, false, 9), "html", null, true);
        echo " ";
        echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, (isset($context["participant"]) || array_key_exists("participant", $context) ? $context["participant"] : (function () { throw new RuntimeError('Variable "participant" does not exist.', 9, $this->source); })()), "prenom", [], "any", false, false, false, 9), "html", null, true);
        echo "</strong>
    </div>
    <div>
    ";
        // line 12
        echo         $this->env->getRuntime('Symfony\Component\Form\FormRenderer')->renderBlock((isset($context["form"]) || array_key_exists("form", $context) ? $context["form"] : (function () { throw new RuntimeError('Variable "form" does not exist.', 12, $this->source); })()), 'form_start');
        echo "
    <div class=\"row\">
        <div class=\"col-sm-5\">
            <div class=\"form-group\">
                ";
        // line 16
        echo $this->env->getRuntime('Symfony\Component\Form\FormRenderer')->searchAndRenderBlock(twig_get_attribute($this->env, $this->source, (isset($context["form"]) || array_key_exists("form", $context) ? $context["form"] : (function () { throw new RuntimeError('Variable "form" does not exist.', 16, $this->source); })()), "campus", [], "any", false, false, false, 16), 'label', ["label_attr" => ["class" => "form-label"], "label" => "Campus :"]);
        echo "
                ";
        // line 17
        echo $this->env->getRuntime('Symfony\Component\Form\FormRenderer')->searchAndRenderBlock(twig_get_attribute($this->env, $this->source, (isset($context["form"]) || array_key_exists("form", $context) ? $context["form"] : (function () { throw new RuntimeError('Variable "form" does not exist.', 17, $this->source); })()), "campus", [], "any", false, false, false, 17), 'widget', ["attr" => ["class" => "form-control"]]);
        echo "
            </div>
            <div class=\"form-group\">
                ";
        // line 20
        echo $this->env->getRuntime('Symfony\Component\Form\FormRenderer')->searchAndRenderBlock(twig_get_attribute($this->env, $this->source, (isset($context["form"]) || array_key_exists("form", $context) ? $context["form"] : (function () { throw new RuntimeError('Variable "form" does not exist.', 20, $this->source); })()), "nom", [], "any", false, false, false, 20), 'label', ["label_attr" => ["class" => "form-label"], "label" => "Le nom de la sortie contient :"]);
        echo "
                ";
        // line 21
        echo $this->env->getRuntime('Symfony\Component\Form\FormRenderer')->searchAndRenderBlock(twig_get_attribute($this->env, $this->source, (isset($context["form"]) || array_key_exists("form", $context) ? $context["form"] : (function () { throw new RuntimeError('Variable "form" does not exist.', 21, $this->source); })()), "nom", [], "any", false, false, false, 21), 'widget', ["attr" => ["class" => "form-control"]]);
        echo "
            </div>
            <div class=\"row ml-1\">
                <div class=\"form-group\">
                    ";
        // line 25
        echo $this->env->getRuntime('Symfony\Component\Form\FormRenderer')->searchAndRenderBlock(twig_get_attribute($this->env, $this->source, (isset($context["form"]) || array_key_exists("form", $context) ? $context["form"] : (function () { throw new RuntimeError('Variable "form" does not exist.', 25, $this->source); })()), "dateHeureDebutMin", [], "any", false, false, false, 25), 'label', ["label_attr" => ["class" => "form-label"], "label" => "Entre le :"]);
        echo "
                    ";
        // line 26
        echo $this->env->getRuntime('Symfony\Component\Form\FormRenderer')->searchAndRenderBlock(twig_get_attribute($this->env, $this->source, (isset($context["form"]) || array_key_exists("form", $context) ? $context["form"] : (function () { throw new RuntimeError('Variable "form" does not exist.', 26, $this->source); })()), "dateHeureDebutMin", [], "any", false, false, false, 26), 'widget', ["attr" => ["class" => "form-control"]]);
        echo "
                </div>
                <div class=\"form-group ml-5\">
                    ";
        // line 29
        echo $this->env->getRuntime('Symfony\Component\Form\FormRenderer')->searchAndRenderBlock(twig_get_attribute($this->env, $this->source, (isset($context["form"]) || array_key_exists("form", $context) ? $context["form"] : (function () { throw new RuntimeError('Variable "form" does not exist.', 29, $this->source); })()), "dateHeureDebutMax", [], "any", false, false, false, 29), 'label', ["label_attr" => ["class" => "form-label"], "label" => "Et :"]);
        echo "
                    ";
        // line 30
        echo $this->env->getRuntime('Symfony\Component\Form\FormRenderer')->searchAndRenderBlock(twig_get_attribute($this->env, $this->source, (isset($context["form"]) || array_key_exists("form", $context) ? $context["form"] : (function () { throw new RuntimeError('Variable "form" does not exist.', 30, $this->source); })()), "dateHeureDebutMax", [], "any", false, false, false, 30), 'widget', ["attr" => ["class" => "form-control"]]);
        echo "
                </div>
            </div>
        </div>
        <div class=\"col-sm-5 ml-2 mt-5\">
            <div class=\"form-group\">
                ";
        // line 36
        echo $this->env->getRuntime('Symfony\Component\Form\FormRenderer')->searchAndRenderBlock(twig_get_attribute($this->env, $this->source, (isset($context["form"]) || array_key_exists("form", $context) ? $context["form"] : (function () { throw new RuntimeError('Variable "form" does not exist.', 36, $this->source); })()), "organisateur", [], "any", false, false, false, 36), 'widget', ["attr" => ["class" => "form-check-input"]]);
        echo "
                ";
        // line 37
        echo $this->env->getRuntime('Symfony\Component\Form\FormRenderer')->searchAndRenderBlock(twig_get_attribute($this->env, $this->source, (isset($context["form"]) || array_key_exists("form", $context) ? $context["form"] : (function () { throw new RuntimeError('Variable "form" does not exist.', 37, $this->source); })()), "organisateur", [], "any", false, false, false, 37), 'label', ["label_attr" => ["class" => "form-check-label"], "label" => "Sorties dont je suis l'organisateur"]);
        echo "
            </div>
            <div class=\"form-group\">
                ";
        // line 40
        echo $this->env->getRuntime('Symfony\Component\Form\FormRenderer')->searchAndRenderBlock(twig_get_attribute($this->env, $this->source, (isset($context["form"]) || array_key_exists("form", $context) ? $context["form"] : (function () { throw new RuntimeError('Variable "form" does not exist.', 40, $this->source); })()), "inscrit", [], "any", false, false, false, 40), 'widget', ["attr" => ["class" => "form-check-input"]]);
        echo "
                ";
        // line 41
        echo $this->env->getRuntime('Symfony\Component\Form\FormRenderer')->searchAndRenderBlock(twig_get_attribute($this->env, $this->source, (isset($context["form"]) || array_key_exists("form", $context) ? $context["form"] : (function () { throw new RuntimeError('Variable "form" does not exist.', 41, $this->source); })()), "inscrit", [], "any", false, false, false, 41), 'label', ["label_attr" => ["class" => "form-check-label"], "label" => "Sorties auxquelles je suis inscrit.e"]);
        echo "
            </div>
            <div class=\"form-group\">
                ";
        // line 44
        echo $this->env->getRuntime('Symfony\Component\Form\FormRenderer')->searchAndRenderBlock(twig_get_attribute($this->env, $this->source, (isset($context["form"]) || array_key_exists("form", $context) ? $context["form"] : (function () { throw new RuntimeError('Variable "form" does not exist.', 44, $this->source); })()), "nonInscrit", [], "any", false, false, false, 44), 'widget', ["attr" => ["class" => "form-check-input"]]);
        echo "
                ";
        // line 45
        echo $this->env->getRuntime('Symfony\Component\Form\FormRenderer')->searchAndRenderBlock(twig_get_attribute($this->env, $this->source, (isset($context["form"]) || array_key_exists("form", $context) ? $context["form"] : (function () { throw new RuntimeError('Variable "form" does not exist.', 45, $this->source); })()), "nonInscrit", [], "any", false, false, false, 45), 'label', ["label_attr" => ["class" => "form-check-label"], "label" => "Sorties auxquelles je ne suis pas inscrit.e"]);
        echo "
            </div>
            <div class=\"form-group\">
                ";
        // line 48
        echo $this->env->getRuntime('Symfony\Component\Form\FormRenderer')->searchAndRenderBlock(twig_get_attribute($this->env, $this->source, (isset($context["form"]) || array_key_exists("form", $context) ? $context["form"] : (function () { throw new RuntimeError('Variable "form" does not exist.', 48, $this->source); })()), "passees", [], "any", false, false, false, 48), 'widget', ["attr" => ["class" => "form-check-input"]]);
        echo "
                ";
        // line 49
        echo $this->env->getRuntime('Symfony\Component\Form\FormRenderer')->searchAndRenderBlock(twig_get_attribute($this->env, $this->source, (isset($context["form"]) || array_key_exists("form", $context) ? $context["form"] : (function () { throw new RuntimeError('Variable "form" does not exist.', 49, $this->source); })()), "passees", [], "any", false, false, false, 49), 'label', ["label_attr" => ["class" => "form-check-label"], "label" => "Sorties passées"]);
        echo "
            </div>
        </div>
    </div>
    <input type=\"submit\" class=\"btn btn-primary\" value=\"Rechercher\"/>
    ";
        // line 54
        echo         $this->env->getRuntime('Symfony\Component\Form\FormRenderer')->renderBlock((isset($context["form"]) || array_key_exists("form", $context) ? $context["form"] : (function () { throw new RuntimeError('Variable "form" does not exist.', 54, $this->source); })()), 'form_end');
        echo "
           <div class=\"pre-scrollable\">
                <div class=\"table-responsive\">
    <table class=\"table table-striped table-responsive-md btn-table tablesorter\" id=\"tablesorter\">
        <thead>
        <tr>
            <th>Nom de la sortie</th>
            <th>Date de la sortie</th>
            <th>Cloture des inscriptions</th>
            <th>inscrits/place</th>
            <th>État</th>
            <th>Inscrit</th>
            <th>Organisateur</th>
            <th>actions</th>
        </tr>
        </thead>
        <tbody>
        ";
        // line 71
        $context['_parent'] = $context;
        $context['_seq'] = twig_ensure_traversable((isset($context["sorties"]) || array_key_exists("sorties", $context) ? $context["sorties"] : (function () { throw new RuntimeError('Variable "sorties" does not exist.', 71, $this->source); })()));
        $context['_iterated'] = false;
        foreach ($context['_seq'] as $context["_key"] => $context["sortie"]) {
            // line 72
            echo "            ";
            if ((-1 === twig_compare(twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, twig_date_converter($this->env, "now"), "diff", [0 => twig_get_attribute($this->env, $this->source, $context["sortie"], "dateHeureDebut", [], "any", false, false, false, 72)], "method", false, false, false, 72), "days", [], "any", false, false, false, 72), 30))) {
                // line 73
                echo "                ";
                $context["p"] = false;
                // line 74
                echo "                ";
                $context['_parent'] = $context;
                $context['_seq'] = twig_ensure_traversable(twig_get_attribute($this->env, $this->source, $context["sortie"], "sortieParticipants", [], "any", false, false, false, 74));
                foreach ($context['_seq'] as $context["_key"] => $context["sortieParticipant"]) {
                    // line 75
                    echo "                    ";
                    if ((0 === twig_compare(twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 75, $this->source); })()), "user", [], "any", false, false, false, 75), twig_get_attribute($this->env, $this->source, $context["sortieParticipant"], "participant", [], "any", false, false, false, 75)))) {
                        // line 76
                        echo "                        ";
                        $context["p"] = "true";
                        // line 77
                        echo "                    ";
                    }
                    // line 78
                    echo "                ";
                }
                $_parent = $context['_parent'];
                unset($context['_seq'], $context['_iterated'], $context['_key'], $context['sortieParticipant'], $context['_parent'], $context['loop']);
                $context = array_intersect_key($context, $_parent) + $_parent;
                // line 79
                echo "                <tr>
                <td>";
                // line 80
                echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, $context["sortie"], "nom", [], "any", false, false, false, 80), "html", null, true);
                echo "</td>
                <td>";
                // line 81
                ((twig_get_attribute($this->env, $this->source, $context["sortie"], "dateHeureDebut", [], "any", false, false, false, 81)) ? (print (twig_escape_filter($this->env, twig_date_format_filter($this->env, twig_get_attribute($this->env, $this->source, $context["sortie"], "dateHeureDebut", [], "any", false, false, false, 81), "d/m/yy H:i"), "html", null, true))) : (print ("")));
                echo "</td>
                <td>";
                // line 82
                ((twig_get_attribute($this->env, $this->source, $context["sortie"], "dateLimiteInscription", [], "any", false, false, false, 82)) ? (print (twig_escape_filter($this->env, twig_date_format_filter($this->env, twig_get_attribute($this->env, $this->source, $context["sortie"], "dateLimiteInscription", [], "any", false, false, false, 82), "d/m/yy H:i"), "html", null, true))) : (print ("")));
                echo "</td>
                <td>";
                // line 83
                echo twig_escape_filter($this->env, twig_length_filter($this->env, twig_get_attribute($this->env, $this->source, $context["sortie"], "sortieParticipants", [], "any", false, false, false, 83)), "html", null, true);
                echo " / ";
                echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, $context["sortie"], "nbInscriptionMax", [], "any", false, false, false, 83), "html", null, true);
                echo "</td>
                <td>";
                // line 84
                echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, $context["sortie"], "etat", [], "any", false, false, false, 84), "html", null, true);
                echo "</td>
                <td>
                    ";
                // line 86
                if ((0 === twig_compare((isset($context["p"]) || array_key_exists("p", $context) ? $context["p"] : (function () { throw new RuntimeError('Variable "p" does not exist.', 86, $this->source); })()), "true"))) {
                    // line 87
                    echo "                        X
                    ";
                }
                // line 89
                echo "                </td>
                <td><a href=\"";
                // line 90
                echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("participant_show", ["id" => twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, $context["sortie"], "organisateur", [], "any", false, false, false, 90), "id", [], "any", false, false, false, 90)]), "html", null, true);
                echo "\">";
                echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, $context["sortie"], "organisateur", [], "any", false, false, false, 90), "html", null, true);
                echo "</a></td>
                <td>
                <a href=\"";
                // line 92
                echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("sortie_show", ["id" => twig_get_attribute($this->env, $this->source, $context["sortie"], "id", [], "any", false, false, false, 92)]), "html", null, true);
                echo "\" class=\"btn btn-primary\">Afficher</a>
                ";
                // line 93
                if (((((0 === twig_compare((isset($context["p"]) || array_key_exists("p", $context) ? $context["p"] : (function () { throw new RuntimeError('Variable "p" does not exist.', 93, $this->source); })()), "true")) && (0 !== twig_compare(twig_get_attribute($this->env, $this->source, $context["sortie"], "organisateur", [], "any", false, false, false, 93), twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 93, $this->source); })()), "user", [], "any", false, false, false, 93)))) && (0 !== twig_compare(twig_get_attribute($this->env, $this->source, $context["sortie"], "etat", [], "any", false, false, false, 93), "Passée"))) && (0 !== twig_compare(twig_get_attribute($this->env, $this->source, $context["sortie"], "etat", [], "any", false, false, false, 93), "Activité en cours")))) {
                    // line 94
                    echo "                    <a href=\"";
                    echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("sortie_desinscrire", ["id" => twig_get_attribute($this->env, $this->source, $context["sortie"], "id", [], "any", false, false, false, 94)]), "html", null, true);
                    echo "\" class=\"btn btn-primary\">Se
                        désister</a>
                ";
                } elseif ((((0 !== twig_compare(                // line 96
(isset($context["p"]) || array_key_exists("p", $context) ? $context["p"] : (function () { throw new RuntimeError('Variable "p" does not exist.', 96, $this->source); })()), "true")) && (0 !== twig_compare(twig_get_attribute($this->env, $this->source, $context["sortie"], "organisateur", [], "any", false, false, false, 96), twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 96, $this->source); })()), "user", [], "any", false, false, false, 96)))) && (0 === twig_compare(twig_get_attribute($this->env, $this->source, $context["sortie"], "etat", [], "any", false, false, false, 96), "Ouverte")))) {
                    // line 97
                    echo "                    <a href=\"";
                    echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("sortie_inscrire", ["id" => twig_get_attribute($this->env, $this->source, $context["sortie"], "id", [], "any", false, false, false, 97)]), "html", null, true);
                    echo "\" class=\"btn btn-primary\">S'inscrire</a>
                ";
                }
                // line 99
                echo "                ";
                if (((0 === twig_compare(twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 99, $this->source); })()), "user", [], "any", false, false, false, 99), twig_get_attribute($this->env, $this->source, $context["sortie"], "organisateur", [], "any", false, false, false, 99))) || $this->extensions['Symfony\Bridge\Twig\Extension\SecurityExtension']->isGranted("ROLE_ADMIN"))) {
                    // line 100
                    echo "                    ";
                    if ((0 === twig_compare(twig_get_attribute($this->env, $this->source, $context["sortie"], "etat", [], "any", false, false, false, 100), "Créée"))) {
                        // line 101
                        echo "                        <a href=\"";
                        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("sortie_publier", ["id" => twig_get_attribute($this->env, $this->source, $context["sortie"], "id", [], "any", false, false, false, 101)]), "html", null, true);
                        echo "\" class=\"btn btn-primary\">Publier</a>
                    ";
                    }
                    // line 103
                    echo "                    ";
                    if (((((0 === twig_compare(twig_get_attribute($this->env, $this->source, $context["sortie"], "etat", [], "any", false, false, false, 103), "Ouverte")) || (0 === twig_compare(twig_get_attribute($this->env, $this->source, $context["sortie"], "etat", [], "any", false, false, false, 103), "Clôturée"))) || (0 === twig_compare(twig_get_attribute($this->env, $this->source, $context["sortie"], "etat", [], "any", false, false, false, 103), "Créée"))) || $this->extensions['Symfony\Bridge\Twig\Extension\SecurityExtension']->isGranted("ROLE_ADMIN"))) {
                        // line 104
                        echo "                        <a href=\"";
                        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("sortie_edit", ["id" => twig_get_attribute($this->env, $this->source, $context["sortie"], "id", [], "any", false, false, false, 104)]), "html", null, true);
                        echo "\" class=\"btn btn-primary\">Modifier</a>
                    ";
                    }
                    // line 106
                    echo "                    ";
                    if ((((0 === twig_compare(twig_get_attribute($this->env, $this->source, $context["sortie"], "etat", [], "any", false, false, false, 106), "Ouverte")) || (0 === twig_compare(twig_get_attribute($this->env, $this->source, $context["sortie"], "etat", [], "any", false, false, false, 106), "Créée"))) || (0 === twig_compare(twig_get_attribute($this->env, $this->source, $context["sortie"], "etat", [], "any", false, false, false, 106), "Clôturée")))) {
                        // line 107
                        echo "                        <a href=\"";
                        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("sortie_delete", ["id" => twig_get_attribute($this->env, $this->source, $context["sortie"], "id", [], "any", false, false, false, 107)]), "html", null, true);
                        echo "\" class=\"btn btn-primary\">Annuler</a>
                    ";
                    }
                    // line 109
                    echo "                ";
                }
                // line 110
                echo "

            ";
            }
            // line 113
            echo "            </td>
            </tr>
        ";
            $context['_iterated'] = true;
        }
        if (!$context['_iterated']) {
            // line 116
            echo "            <tr>
                <td colspan=\"8\">Aucun résultat</td>
            </tr>
        ";
        }
        $_parent = $context['_parent'];
        unset($context['_seq'], $context['_iterated'], $context['_key'], $context['sortie'], $context['_parent'], $context['loop']);
        $context = array_intersect_key($context, $_parent) + $_parent;
        // line 120
        echo "        </tbody>
    </table>
    </div>
           </div>
</div>
<a href=\"";
        // line 125
        echo $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("sortie_new");
        echo "\" class=\"btn btn-primary\">Ajouter une sortie</a>
";
        
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->leave($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof);

        
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->leave($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof);

    }

    // line 127
    public function block_javascripts($context, array $blocks = [])
    {
        $macros = $this->macros;
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->enter($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "javascripts"));

        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02 = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->enter($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "javascripts"));

        // line 128
        echo "    ";
        $this->displayParentBlock("javascripts", $context, $blocks);
        echo "
    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.3/js/jquery.tablesorter.min.js\"></script>
    <script>\$(function() {
            \$(\"#tablesorter\").tablesorter({
                dateFormat: \"ddmmyyyy\"
            });
        });</script>
";
        
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->leave($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof);

        
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->leave($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof);

    }

    public function getTemplateName()
    {
        return "sortie/index.html.twig";
    }

    public function isTraitable()
    {
        return false;
    }

    public function getDebugInfo()
    {
        return array (  377 => 128,  367 => 127,  355 => 125,  348 => 120,  339 => 116,  332 => 113,  327 => 110,  324 => 109,  318 => 107,  315 => 106,  309 => 104,  306 => 103,  300 => 101,  297 => 100,  294 => 99,  288 => 97,  286 => 96,  280 => 94,  278 => 93,  274 => 92,  267 => 90,  264 => 89,  260 => 87,  258 => 86,  253 => 84,  247 => 83,  243 => 82,  239 => 81,  235 => 80,  232 => 79,  226 => 78,  223 => 77,  220 => 76,  217 => 75,  212 => 74,  209 => 73,  206 => 72,  201 => 71,  181 => 54,  173 => 49,  169 => 48,  163 => 45,  159 => 44,  153 => 41,  149 => 40,  143 => 37,  139 => 36,  130 => 30,  126 => 29,  120 => 26,  116 => 25,  109 => 21,  105 => 20,  99 => 17,  95 => 16,  88 => 12,  80 => 9,  76 => 8,  69 => 3,  59 => 2,  36 => 1,);
    }

    public function getSourceContext()
    {
        return new Source("{% extends 'base.html.twig' %}
{% block body %}
    <style>
        .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
        .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
    </style>
    <div class=\"float-right\">
        <strong>Date du jour : {{ \"now\"|date('d/m/yy') }}</strong><br/>
        <strong>Participant : {{ participant.nom }} {{ participant.prenom }}</strong>
    </div>
    <div>
    {{ form_start(form) }}
    <div class=\"row\">
        <div class=\"col-sm-5\">
            <div class=\"form-group\">
                {{ form_label(form.campus, 'Campus :',{'label_attr': {'class' : 'form-label'}}) }}
                {{ form_widget(form.campus, {'attr': {'class' : 'form-control'}}) }}
            </div>
            <div class=\"form-group\">
                {{ form_label(form.nom, 'Le nom de la sortie contient :',{'label_attr': {'class' : 'form-label'}}) }}
                {{ form_widget(form.nom, {'attr': {'class' : 'form-control'}}) }}
            </div>
            <div class=\"row ml-1\">
                <div class=\"form-group\">
                    {{ form_label(form.dateHeureDebutMin,'Entre le :', {'label_attr': {'class' : 'form-label'}}) }}
                    {{ form_widget(form.dateHeureDebutMin, {'attr': {'class' : 'form-control'}}) }}
                </div>
                <div class=\"form-group ml-5\">
                    {{ form_label(form.dateHeureDebutMax, 'Et :',{'label_attr': {'class' : 'form-label'}}) }}
                    {{ form_widget(form.dateHeureDebutMax, {'attr': {'class' : 'form-control'}}) }}
                </div>
            </div>
        </div>
        <div class=\"col-sm-5 ml-2 mt-5\">
            <div class=\"form-group\">
                {{ form_widget(form.organisateur, {'attr': {'class' : 'form-check-input'}}) }}
                {{ form_label(form.organisateur, 'Sorties dont je suis l\\'organisateur',{'label_attr': {'class' : 'form-check-label'}}) }}
            </div>
            <div class=\"form-group\">
                {{ form_widget(form.inscrit, {'attr': {'class' : 'form-check-input'}}) }}
                {{ form_label(form.inscrit, 'Sorties auxquelles je suis inscrit.e',{'label_attr': {'class' : 'form-check-label'}}) }}
            </div>
            <div class=\"form-group\">
                {{ form_widget(form.nonInscrit, {'attr': {'class' : 'form-check-input'}}) }}
                {{ form_label(form.nonInscrit,'Sorties auxquelles je ne suis pas inscrit.e', {'label_attr': {'class' : 'form-check-label'}}) }}
            </div>
            <div class=\"form-group\">
                {{ form_widget(form.passees, {'attr': {'class' : 'form-check-input'}}) }}
                {{ form_label(form.passees, 'Sorties passées', {'label_attr': {'class' : 'form-check-label'}}) }}
            </div>
        </div>
    </div>
    <input type=\"submit\" class=\"btn btn-primary\" value=\"Rechercher\"/>
    {{ form_end(form) }}
           <div class=\"pre-scrollable\">
                <div class=\"table-responsive\">
    <table class=\"table table-striped table-responsive-md btn-table tablesorter\" id=\"tablesorter\">
        <thead>
        <tr>
            <th>Nom de la sortie</th>
            <th>Date de la sortie</th>
            <th>Cloture des inscriptions</th>
            <th>inscrits/place</th>
            <th>État</th>
            <th>Inscrit</th>
            <th>Organisateur</th>
            <th>actions</th>
        </tr>
        </thead>
        <tbody>
        {% for sortie in sorties %}
            {% if (date('now').diff(sortie.dateHeureDebut)).days<30 %}
                {% set p = false %}
                {% for sortieParticipant in sortie.sortieParticipants %}
                    {% if app.user == sortieParticipant.participant %}
                        {% set p = \"true\" %}
                    {% endif %}
                {% endfor %}
                <tr>
                <td>{{ sortie.nom }}</td>
                <td>{{ sortie.dateHeureDebut ? sortie.dateHeureDebut|date('d/m/yy H:i') : '' }}</td>
                <td>{{ sortie.dateLimiteInscription ? sortie.dateLimiteInscription|date('d/m/yy H:i') : '' }}</td>
                <td>{{ sortie.sortieParticipants | length }} / {{ sortie.nbInscriptionMax }}</td>
                <td>{{ sortie.etat }}</td>
                <td>
                    {% if p == \"true\" %}
                        X
                    {% endif %}
                </td>
                <td><a href=\"{{ path('participant_show', {'id': sortie.organisateur.id}) }}\">{{ sortie.organisateur }}</a></td>
                <td>
                <a href=\"{{ path('sortie_show', {'id': sortie.id}) }}\" class=\"btn btn-primary\">Afficher</a>
                {% if p == \"true\" and sortie.organisateur != app.user and sortie.etat != \"Passée\" and sortie.etat != \"Activité en cours\" %}
                    <a href=\"{{ path('sortie_desinscrire', {'id': sortie.id}) }}\" class=\"btn btn-primary\">Se
                        désister</a>
                {% elseif p!=\"true\" and sortie.organisateur != app.user and sortie.etat == \"Ouverte\" %}
                    <a href=\"{{ path('sortie_inscrire', {'id': sortie.id}) }}\" class=\"btn btn-primary\">S'inscrire</a>
                {% endif %}
                {% if app.user == sortie.organisateur or is_granted('ROLE_ADMIN') %}
                    {% if sortie.etat == \"Créée\" %}
                        <a href=\"{{ path('sortie_publier', {'id': sortie.id}) }}\" class=\"btn btn-primary\">Publier</a>
                    {% endif %}
                    {% if sortie.etat == \"Ouverte\" or sortie.etat == \"Clôturée\" or sortie.etat == \"Créée\" or is_granted(\"ROLE_ADMIN\") %}
                        <a href=\"{{ path('sortie_edit', {'id': sortie.id}) }}\" class=\"btn btn-primary\">Modifier</a>
                    {% endif %}
                    {% if sortie.etat == \"Ouverte\" or sortie.etat == \"Créée\" or sortie.etat == \"Clôturée\" %}
                        <a href=\"{{ path('sortie_delete', {'id': sortie.id}) }}\" class=\"btn btn-primary\">Annuler</a>
                    {% endif %}
                {% endif %}


            {% endif %}
            </td>
            </tr>
        {% else %}
            <tr>
                <td colspan=\"8\">Aucun résultat</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
    </div>
           </div>
</div>
<a href=\"{{ path('sortie_new') }}\" class=\"btn btn-primary\">Ajouter une sortie</a>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.3/js/jquery.tablesorter.min.js\"></script>
    <script>\$(function() {
            \$(\"#tablesorter\").tablesorter({
                dateFormat: \"ddmmyyyy\"
            });
        });</script>
{% endblock %}", "sortie/index.html.twig", "C:\\xampp\\htdocs\\PROJET-ENI-2\\templates\\sortie\\index.html.twig");
    }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:80:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e";O:35:"phpDocumentor\Reflection\Php\Class_":11:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:80:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e";s:36:" phpDocumentor\Reflection\Fqsen name";s:79:"__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:14:"\Twig\Template";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"Template";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:2:{s:89:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::$source";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:89:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::$source";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"source";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";N;s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";N;s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:18;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}s:89:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::$macros";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:89:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::$macros";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"macros";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";N;s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:2:"[]";s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:19;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:9:{s:95:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::__construct()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:95:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::__construct()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"__construct";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"env";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:17:"\Twig\Environment";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"Environment";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:21;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:95:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::doGetParent()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:95:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::doGetParent()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"doGetParent";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"context";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":1:{s:46:" phpDocumentor\Reflection\Types\Compound types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:33;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:93:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::doDisplay()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:93:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::doDisplay()";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"doDisplay";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"context";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":1:{s:46:" phpDocumentor\Reflection\Types\Compound types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"blocks";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":1:{s:46:" phpDocumentor\Reflection\Types\Compound types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}}}s:46:" phpDocumentor\Reflection\Php\Argument default";s:2:"[]";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:39;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:94:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::block_body()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:94:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::block_body()";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"block_body";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"context";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"blocks";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":1:{s:46:" phpDocumentor\Reflection\Types\Compound types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}}}s:46:" phpDocumentor\Reflection\Php\Argument default";s:2:"[]";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:59;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:101:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::block_javascripts()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:101:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::block_javascripts()";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"block_javascripts";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"context";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"blocks";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":1:{s:46:" phpDocumentor\Reflection\Types\Compound types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}}}s:46:" phpDocumentor\Reflection\Php\Argument default";s:2:"[]";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:367;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:99:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::getTemplateName()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:99:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::getTemplateName()";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"getTemplateName";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:395;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:95:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::isTraitable()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:95:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::isTraitable()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"isTraitable";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:400;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:96:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::getDebugInfo()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:96:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::getDebugInfo()";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"getDebugInfo";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:405;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:100:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::getSourceContext()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:100:"\__TwigTemplate_e10b8d09100afc7c8b0925fd90355ebce45740394a5474338bc5f8902d0adb8e::getSourceContext()";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"getSourceContext";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:410;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:16;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";