1626894628
waR3U4bTeM%3A8b221b3a2e547eb686df5b7246a6dda7-b5a2309ca6ba45e55b49fcb6ed1dd9a2
s:9976:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:67:"This file has been auto-generated
by the Symfony Routing Component.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"b5a2309ca6ba45e55b49fcb6ed1dd9a2";s:39:" phpDocumentor\Reflection\Php\File name";s:23:"url_matching_routes.php";s:39:" phpDocumentor\Reflection\Php\File path";s:38:"var/cache/prod/url_matching_routes.php";s:41:" phpDocumentor\Reflection\Php\File source";s:5625:"<?php

/**
 * This file has been auto-generated
 * by the Symfony Routing Component.
 */

return [
    false, // $matchHost
    [ // $staticRoutes
        '/admin/campus' => [[['_route' => 'campus_index', '_controller' => 'App\\Controller\\CampusController::index'], null, ['GET' => 0, 'POST' => 1], null, true, false, null]],
        '/mdp/mdp_oublie' => [[['_route' => 'mdp_oublie', '_controller' => 'App\\Controller\\EmailController::index'], null, null, null, false, false, null]],
        '/mdp/sendPasswordEmail' => [[['_route' => 'sendPasswordEmail', '_controller' => 'App\\Controller\\EmailController::sendPasswordEmail'], null, ['POST' => 0], null, false, false, null]],
        '/admin/participant' => [[['_route' => 'participant_index', '_controller' => 'App\\Controller\\ParticipantController::index'], null, ['GET' => 0], null, true, false, null]],
        '/admin/participant/new' => [[['_route' => 'participant_new', '_controller' => 'App\\Controller\\ParticipantController::new'], null, ['GET' => 0, 'POST' => 1], null, false, false, null]],
        '/importCsvFile' => [[['_route' => 'app_importCsvFile', '_controller' => 'App\\Controller\\ParticipantController::csv'], null, ['GET' => 0, 'POST' => 1, 'DELETE' => 2], null, false, false, null]],
        '/login' => [[['_route' => 'app_login', '_controller' => 'App\\Controller\\SecurityController::login'], null, null, null, false, false, null]],
        '/logout' => [[['_route' => 'app_logout', '_controller' => 'App\\Controller\\SecurityController::logout'], null, null, null, false, false, null]],
        '/' => [[['_route' => 'accueil', '_controller' => 'App\\Controller\\SortieController::index'], null, ['GET' => 0, 'POST' => 1], null, false, false, null]],
        '/sortie/new' => [[['_route' => 'sortie_new', '_controller' => 'App\\Controller\\SortieController::new'], null, ['GET' => 0, 'POST' => 1], null, false, false, null]],
        '/ville' => [[['_route' => 'ville_index', '_controller' => 'App\\Controller\\VilleController::index'], null, ['GET' => 0, 'POST' => 1], null, true, false, null]],
    ],
    [ // $regexpList
        0 => '{^(?'
                .'|/admin/(?'
                    .'|campus/([^/]++)(?'
                        .'|/edit(*:40)'
                        .'|(*:47)'
                    .')'
                    .'|participant/([^/]++)(*:75)'
                .')'
                .'|/mdp/resetPwd/([^/]++)(*:105)'
                .'|/participant/([^/]++)/(?'
                    .'|show(*:142)'
                    .'|edit(*:154)'
                .')'
                .'|/sortie/(?'
                    .'|([^/]++)(?'
                        .'|(*:185)'
                        .'|/(?'
                            .'|edit(*:201)'
                            .'|delete(*:215)'
                        .')'
                    .')'
                    .'|inscrire/([^/]++)(*:242)'
                    .'|desinscrire/([^/]++)(*:270)'
                    .'|publier/([^/]++)(*:294)'
                .')'
                .'|/ville/([^/]++)(?'
                    .'|/edit(*:326)'
                    .'|(*:334)'
                .')'
            .')/?$}sDu',
    ],
    [ // $dynamicRoutes
        40 => [[['_route' => 'campus_edit', '_controller' => 'App\\Controller\\CampusController::edit'], ['id'], ['GET' => 0, 'POST' => 1], null, false, false, null]],
        47 => [[['_route' => 'campus_delete', '_controller' => 'App\\Controller\\CampusController::delete'], ['id'], ['DELETE' => 0], null, false, true, null]],
        75 => [[['_route' => 'participant_delete', '_controller' => 'App\\Controller\\ParticipantController::delete'], ['id'], ['DELETE' => 0], null, false, true, null]],
        105 => [[['_route' => 'resetPwd', '_controller' => 'App\\Controller\\EmailController::resetPassword'], ['token'], null, null, true, true, null]],
        142 => [[['_route' => 'participant_show', '_controller' => 'App\\Controller\\ParticipantController::show'], ['id'], ['GET' => 0], null, false, false, null]],
        154 => [[['_route' => 'participant_edit', '_controller' => 'App\\Controller\\ParticipantController::edit'], ['id'], ['GET' => 0, 'POST' => 1], null, false, false, null]],
        185 => [[['_route' => 'sortie_show', '_controller' => 'App\\Controller\\SortieController::show'], ['id'], ['GET' => 0], null, false, true, null]],
        201 => [[['_route' => 'sortie_edit', '_controller' => 'App\\Controller\\SortieController::edit'], ['id'], ['GET' => 0, 'POST' => 1], null, false, false, null]],
        215 => [[['_route' => 'sortie_delete', '_controller' => 'App\\Controller\\SortieController::delete'], ['id'], ['GET' => 0, 'POST' => 1], null, false, false, null]],
        242 => [[['_route' => 'sortie_inscrire', '_controller' => 'App\\Controller\\SortieController::inscrire'], ['id'], ['GET' => 0], null, false, true, null]],
        270 => [[['_route' => 'sortie_desinscrire', '_controller' => 'App\\Controller\\SortieController::desinscrire'], ['id'], ['GET' => 0], null, false, true, null]],
        294 => [[['_route' => 'sortie_publier', '_controller' => 'App\\Controller\\SortieController::publier'], ['id'], ['GET' => 0], null, false, true, null]],
        326 => [[['_route' => 'ville_edit', '_controller' => 'App\\Controller\\VilleController::edit'], ['id'], ['GET' => 0, 'POST' => 1], null, false, false, null]],
        334 => [
            [['_route' => 'ville_delete', '_controller' => 'App\\Controller\\VilleController::delete'], ['id'], ['DELETE' => 0], null, false, true, null],
            [null, null, null, null, false, false, 0],
        ],
    ],
    null, // $checkCondition
];
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";